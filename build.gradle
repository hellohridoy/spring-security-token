plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'Com.example.e-commerce'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springAiVersion', "1.0.0-M5")
}

dependencies {
    // --- Spring Boot Starters ---
    implementation 'org.springframework.boot:spring-boot-starter-web'            // Web applications
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'       // JPA and Hibernate
    implementation 'org.springframework.boot:spring-boot-starter-mail'           // Email support
    implementation 'org.springframework.boot:spring-boot-starter-validation'     // Validation (JSR 380)

//    // --- Thymeleaf ---
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'      // Template engine
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-spring security6'       // Thymeleaf security integration

    // --- ModelMapper ---
    implementation 'org.modelmapper.extensions:modelmapper-spring:2.4.4'          // Mapping DTOs to entities

//    // --- JWT for Security ---
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'                              // JWT API
//    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'                                // JWT implementation
//    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'                             // JWT JSON processing
//
//    // --- AI Support ---
//    implementation 'org.springframework.ai:spring-ai-redis-store-spring-boot-starter' // Spring AI Redis store

    // --- Lombok ---
    compileOnly 'org.projectlombok:lombok'                                        // Lombok for reducing boilerplate
    annotationProcessor 'org.projectlombok:lombok'

    // --- Databases ---
    runtimeOnly 'com.mysql:mysql-connector-j'                                     // MySQL JDBC driver
    runtimeOnly 'org.postgresql:postgresql'                                       // PostgreSQL JDBC driver

    // --- Testing ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'        // Spring Boot test utilities
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'                  // JUnit platform
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
